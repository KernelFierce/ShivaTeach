/**
 * @file Firestore Security Rules
 * @description This ruleset enforces a strict user-ownership model for private user data and a tenant-based access control model for shared resources.
 *
 * Data Structure:
 * - `/users/{userId}`: Stores private user profiles. Access is restricted to the owning user.
 * - `/tenants/{tenantId}`: Stores tenant-level data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/users/{userId}`: Stores user data within a tenant context. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/courses/{courseId}`: Stores course data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/subjects/{subjectId}`: Stores subject data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/sessions/{sessionId}`: Stores session data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/invoices/{invoiceId}`: Stores invoice data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/invoices/{invoiceId}/payments/{paymentId}`: Stores payment data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/availabilities/{availabilityId}`: Stores availability data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/assignments/{assignmentId}`: Stores assignment data. Access is not explicitly defined, defaulting to closed.
 * - `/tenants/{tenantId}/leads/{leadId}`: Stores lead data. Access is not explicitly defined, defaulting to closed.
 *
 * Key Security Decisions:
 * - User listing is generally disallowed unless explicitly stated otherwise.
 * - Tenant-scoped data access is implicitly denied unless tenant membership or a specific role is validated.
 * - All write operations are protected by authorization checks.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Enforces user-ownership for private user profiles. Only the authenticated user can read or write their own profile.
     * @path /users/{userId}
     * @allow (create) - Authenticated user with UID matching {userId} can create their profile.
     * @allow (get, list, update, delete) - Authenticated user with UID matching {userId} can access their profile.
     * @deny (create, get, list, update, delete) - Any other user attempting to access this profile.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      function isSignedIn() {
        return request.auth != null;
      }

      function isOwner(userId) {
        return request.auth.uid == userId;
      }

      function isExistingOwner(userId) {
        return isOwner(userId) && resource != null;
      }

      // Allow the user to create their own profile if the userId matches their auth UID.
      allow create: if isSignedIn() && isOwner(userId) && request.resource.data.id == userId;

      // Allow the user to read, update, and delete their own profile.
      allow get, list: if isOwner(userId);
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Controls access to tenant data. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle  Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to user data within a specific tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/users/{userId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/users/{userId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to course data for a tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/courses/{courseId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/courses/{courseId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to subject data for a tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/subjects/{subjectId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/subjects/{subjectId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to session data for a tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/sessions/{sessionId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/sessions/{sessionId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to invoice data for a tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/invoices/{invoiceId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/invoices/{invoiceId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to payment data for a specific invoice. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/invoices/{invoiceId}/payments/{paymentId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/invoices/{invoiceId}/payments/{paymentId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to teacher availability data for a tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/availabilities/{availabilityId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/availabilities/{availabilityId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to assignment data for a tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/assignments/{assignmentId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/assignments/{assignmentId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }

    /**
     * @description Controls access to lead data for a tenant. No explicit permissions are granted here, defaulting to closed access.
     * @path /tenants/{tenantId}/leads/{leadId}
     * @allow None - No read or write operations are allowed by default.
     * @deny All - All requests are denied unless explicitly allowed in subcollection rules.
     * @principle Data in this collection is implicitly private and needs specific rules for access.
     */
    match /tenants/{tenantId}/leads/{leadId} {
      allow get, list: if false;
      allow create, update, delete: if false;
    }
  }
}